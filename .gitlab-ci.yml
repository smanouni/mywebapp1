stages:
  - validate
  - compile
  - test
  - security
  - package
  - quality
  - deploy

validate:
  stage: validate
  image: node:latest
  before_script:
    - npm install -g htmlhint
  script:
    - htmlhint src/index.html || true

compile:
  stage: compile
  script:
    - echo "Pas de compilation nécessaire pour du HTML/CSS/JS"

test:
  stage: test
  image: node:latest
  before_script:
    - npm install -g stylelint stylelint-config-standard
  script:
    - stylelint "src/css/*.css"

security:
  stage: security
  image: mcr.microsoft.com/windows/servercore:ltsc2022  # Utilisation d'une image Windows
  before_script:
    - echo "Installation des dépendances"
    - powershell -Command "Invoke-WebRequest -Uri 'https://github.com/zaproxy/zaproxy/releases/download/v2.15.0/ZAP_2_15_0_windows.exe' -OutFile 'C:\ZAP_2_15_0_windows.exe'"
    - echo "Installation de ZAP"
    - Start-Process -FilePath "C:\ZAP_2_15_0_windows.exe" -ArgumentList "/S" -Wait
  script:
    - echo "Exécution de ZAP pour analyser l'application"
    - powershell -Command "& 'C:\Program Files\ZAP\zap.exe' -cmd -quickurl 'http://localhost:8000' -quickout 'C:\zap_report.html'"

package:
  stage: package
  script:
    - tar -cvf mywebapp.tar.gz src/
  artifacts:
    paths:
      - mywebapp.tar.gz

quality:
  stage: quality
  script:
    - echo "Contrôle qualité terminé"
deploy:
  stage: deploy
  script:
    - mkdir public
    - cp -r src/* public/
  artifacts:
    paths:
      - public
  only:
    - main
