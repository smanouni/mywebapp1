stages:
  - validate
  - compile
  - test
  - security
  - package
  - quality
  - deploy

validate:
  stage: validate
  image: node:latest
  before_script:
    - npm install -g htmlhint
  script:
    - htmlhint src/index.html || true

compile:
  stage: compile
  script:
    - echo "Pas de compilation nécessaire pour du HTML/CSS/JS"

test:
  stage: test
  image: node:latest
  before_script:
    - npm install -g stylelint stylelint-config-standard
  script:
    - stylelint "src/css/*.css"

security:
  stage: security
  image: debian:latest
  before_script:
    - echo "Installation des dépendances"
    - apt-get update && apt-get install -y wget unzip
    - echo "Téléchargement et installation de ZAP"
    - wget -O ZAP.tar.gz https://github.com/zaproxy/zaproxy/releases/latest/download/ZAP_2_14_0_Linux.tar.gz
    - tar -xvzf ZAP.tar.gz -C /opt/
  script:
    - echo "Exécution de ZAP pour analyser l'application"
    - /opt/ZAP_2_14_0/zap.sh -cmd -quickurl "http://localhost:8000" -quickout "zap_report.html"

package:
  stage: package
  script:
    - tar -cvf mywebapp.tar.gz src/
  artifacts:
    paths:
      - mywebapp.tar.gz

quality:
  stage: quality
  script:
    - echo "Contrôle qualité terminé"
deploy:
  stage: deploy
  script:
    - mkdir public
    - cp -r src/* public/
  artifacts:
    paths:
      - public
  only:
    - main
